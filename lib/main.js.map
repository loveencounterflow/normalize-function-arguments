{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n#===========================================================================================================\nH                         = require './helpers'\n{ gnd\n  hide\n  # get_instance_methods\n  bind_instance_methods\n  nameit\n  debug\n  warn\n  help\n  rpr                   } = H\n# E                         = require './errors'\n# optional                  = Symbol 'optional'\n\n\n#=========================================================================================================\nclass Arity_error extends Error\nclass Not_implemented_error extends Error\nclass Value_mismatch_error extends Error\n\n\n#===========================================================================================================\ninternals = new class Internals then constructor: ->\n  @pod_prototypes = H.pod_prototypes\n  @gnd            = gnd\n  return undefined\n\n\n\n\n\n#===========================================================================================================\nclass Normalize_function_arguments\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg = null ) ->\n    if cfg?\n      throw new Not_implemented_error \"立nfa___1 configuration not implemented\"\n    bind_instance_methods @\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  nfa: ( fn ) ->                                                        ### Normalize Function Arguments ###\n    signature         = @get_signature fn\n    names             = Object.keys signature\n    arity             = names.length\n    p_names           = names[ ... names.length - 1 ]\n    p_arity           = p_names.length\n    #.......................................................................................................\n    return ( P... ) ->\n      #.....................................................................................................\n      if gnd.pod.isa P.at -1  then  Q = gnd.pod.create P.pop() ### NOTE copy object so we can modify it ###\n      else                          Q = gnd.pod.create()\n      #.....................................................................................................\n      if P.length > p_arity\n        throw new Arity_error \"立nfa___3 expected up to #{p_arity} positional arguments, got #{P.length}\"\n      #.....................................................................................................\n      P.push undefined while P.length < p_arity\n      #.....................................................................................................\n      for name, idx in p_names\n        p_value = P[ idx  ]\n        q_value = Q[ name ]\n        switch true\n          when ( p_value is   undefined ) and ( q_value is   undefined ) then null\n          when ( p_value is   undefined ) and ( q_value isnt undefined ) then P[ idx  ] = q_value\n          when ( p_value isnt undefined ) and ( q_value is   undefined ) then Q[ name ] = p_value\n          else\n            ### TAINT treat acc to value mismatch resolution strategy ###\n            # unless p_value is q_value                                   # strategy: 'error'\n            #   throw new Value_mismatch_error \"立nfa___4\"\n            # P[ idx  ] = q_value                                           # strategy: 'named'\n            Q[ name ] = p_value                                             # strategy: 'positional'\n      #.....................................................................................................\n      return fn.call @, P..., Q\n\n  #---------------------------------------------------------------------------------------------------------\n  get_signature: ( fn ) ->\n    ### thx to https://github.com/sindresorhus/identifier-regex ###\n    jsid_re = /// ^ [ $ _ \\p{ID_Start} ] [ $ _ \\u200C \\u200D \\p{ID_Continue} ]* $ ///sv\n    R       = {}\n    body    = fn.toString()\n    kernel  = body.replace /// ^ [^ \\( ]* \\( \\s* ( [^ \\) ]* ) \\s* \\) .* $ ///sv, '$1'\n    return R if kernel is ''\n    parts   = kernel.split /// , \\s* ///sv\n    $names  = []\n    #.......................................................................................................\n    for part in parts\n      # switch true\n      #   #...................................................................................................\n      #   when ( match = part.match /// ^ [.]{3} \\s* (?<name> \\S+ ) \\s* $ ///sv )?\n      #     disposition   = 'soak'\n      #     name          = match.groups.name\n      #   #...................................................................................................\n      #   when ( match = part.match /// ^ (?<name> \\S+ ) \\s* = \\s* optional $///sv )?\n      #     disposition   = 'optional'\n      #     name          = match.groups.name\n      #   #...................................................................................................\n      #   else\n      unless ( part.match jsid_re )?\n        throw new Error \"立nfa___5 not compliant: #{rpr part} in #{rpr kernel}\"\n      disposition   = 'bare'\n      name          = part\n      #.....................................................................................................\n      R[ name ] = disposition\n      $names.push name\n    return R\n\n\n#===========================================================================================================\nnormalizer                = new Normalize_function_arguments()\n{ nfa\n  get_signature }         = normalizer\n\n#===========================================================================================================\nmodule.exports = { nfa, get_signature, internals, }\n\n"
  ]
}