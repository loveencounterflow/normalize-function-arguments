{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n#===========================================================================================================\nH                         = require './helpers'\n{ gnd\n  hide\n  # get_instance_methods\n  bind_instance_methods\n  nameit\n  debug\n  warn\n  help\n  rpr                   } = H\n# E                         = require './errors'\n\n\n#=========================================================================================================\nclass Arity_error extends Error\nclass Not_implemented_error extends Error\nclass Value_mismatch_error extends Error\n\n\n#===========================================================================================================\ninternals = new class Internals then constructor: ->\n  @pod_prototypes = H.pod_prototypes\n  @gnd            = gnd\n  return undefined\n\n\n\n\n\n#===========================================================================================================\nclass Normalize_function_arguments\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg = null ) ->\n    if cfg?\n      throw new Not_implemented_error \"Ωnfa__10 configuration not implemented\"\n    bind_instance_methods @\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  nfa: ( fn ) ->\n    ### Normalize Function Arguments ###\n    signature         = @get_signature fn\n    names             = Object.keys signature\n    pos_names         = names[ .. names.length - 2 ]\n    arity             = names.length\n    dispositions      = ( signature[ name ] for name in names )\n    #.......................................................................................................\n    for disposition, idx in dispositions\n      continue if disposition is 'bare'\n      throw new Not_implemented_error \"Ωnfa___6 encountered unimplemented disposition #{rpr disposition} for parameter #names[ idx ]\"\n    #.......................................................................................................\n    return ( P... ) ->\n      #.....................................................................................................\n      if P.length > arity\n        throw new Arity_error \"Ωnfa___7 expected up to #{arity} arguments, got #{P.length}\"\n      #.....................................................................................................\n      unless gnd.pod.isa P.at -1\n        if P.length > arity - 1\n          throw new Arity_error \"Ωnfa___8 expected up to #{arity - 1} positional arguments plus one POD, got #{P.length} positional arguments\"\n        P.push {} # Object.create null\n      else\n        ### NOTE copy object so we can modify it ###\n        # P[ P.length - 1 ] = Object.assign ( Object.create null ), P.at -1\n        P[ P.length - 1 ] = Object.assign {}, P.at -1\n      #.....................................................................................................\n      while P.length < arity\n        P.splice P.length - 1, 0, undefined\n      #.....................................................................................................\n      ### TAINT use Q = P.pop(), fn.call @, P..., Q ###\n      Q = P.at -1\n      for name, idx in pos_names\n        pos_value = P[ idx  ]\n        nme_value = Q[ name ]\n        switch true\n          when ( pos_value is   undefined ) and ( nme_value is   undefined ) then null\n          when ( pos_value is   undefined ) and ( nme_value isnt undefined ) then P[ idx  ] = nme_value\n          when ( pos_value isnt undefined ) and ( nme_value is   undefined ) then Q[ name ] = pos_value\n          else\n            ### TAINT treat acc to value mismatch resolution strategy ###\n            # unless pos_value is nme_value                                   # strategy: 'error'\n            #   throw new Value_mismatch_error \"Ωnfa___9\"\n            # P[ idx  ] = nme_value                                           # strategy: 'named'\n            Q[ name ] = pos_value                                             # strategy: 'positional'\n      #.....................................................................................................\n      return fn.call @, P...\n\n  #---------------------------------------------------------------------------------------------------------\n  get_signature: ( fn ) ->\n    ### thx to https://github.com/sindresorhus/identifier-regex ###\n    jsid_re              = /// ^ [ $ _ \\p{ID_Start} ] [ $ _ \\u200C \\u200D \\p{ID_Continue} ]* $ ///sv\n    debug()\n    body    = fn.toString()\n    kernel  = body.replace /// ^ [^ \\( ]* \\( \\s* ( [^ \\) ]* ) \\s* \\) .* $ ///sv, '$1'\n    parts   = kernel.split /// , \\s* ///sv\n    # urge 'Ωnfa___1', rpr body\n    # urge 'Ωnfa___2', rpr kernel\n    # urge 'Ωnfa___3', rpr parts\n    $names  = []\n    # R       = { $names, }\n    R       = {}\n    for part in parts\n      switch true\n        when ( match = part.match /// ^ [.]{3} \\s* (?<name> \\S+ ) \\s* $ ///sv )?\n          name          = match.groups.name\n          disposition   = 'soak'\n        when ( match = part.match /// ^ (?<name> \\S+ ) \\s* = \\s* optional $///sv )?\n          name          = match.groups.name\n          disposition   = 'optional'\n        else\n          unless ( part.match jsid_re )?\n            throw new Error \"Ωnfa___4 not compliant: #{rpr part} in #{rpr kernel}\"\n          name          = part\n          disposition   = 'bare'\n      # info 'Ωnfa___5', ( rpr part ), { name, disposition, }\n      R[ name ] = disposition\n      # R[ name ] = { name, disposition, }\n      $names.push name\n    return R\n\n\n#===========================================================================================================\nnormalizer  = new Normalize_function_arguments()\n{ nfa }     = normalizer\n\n#===========================================================================================================\nmodule.exports = { nfa, internals, }\n\n"
  ]
}