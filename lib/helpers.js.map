{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/helpers.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n#===========================================================================================================\n# optional                  = Symbol 'optional'\npod_prototypes            = Object.freeze [ null, ( Object.getPrototypeOf {} ), ]\n# new_pod                   = -> {}\nnew_pod                   = -> Object.create null\n\n# #===========================================================================================================\n# @bind_proto = ( that, f ) -> that::[ f.name ] = f.bind that::\n\n#===========================================================================================================\nclass Template\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg = null ) ->\n    for name, descriptor of Object.getOwnPropertyDescriptors cfg ? {}\n      descriptor = switch true\n        #...................................................................................................\n        when gnd.function.isa descriptor.value    then do ( descriptor ) =>\n          { configurable, value: get, } = descriptor\n          return { enumerable: true, configurable, get, }\n        #...................................................................................................\n        when gnd.pod.isa      descriptor.value    then do ( descriptor ) =>\n          { configurable, value, } = descriptor\n          get = -> new Template value\n          return { enumerable: true, configurable, get, }\n        #...................................................................................................\n        else\n          descriptor\n      #.....................................................................................................\n      Object.defineProperty @, name, descriptor\n    return undefined\n\n\n#===========================================================================================================\ncreate_validator = ( typename, isa ) ->\n  ### TAINT `gnd.nonempty_text.validate typename` ###\n  ### TAINT `gnd.function.validate isa` ###\n  ### TAINT silently accepts truthy, falsy values returned by `isa()`, not only booleans ###\n  return ( x ) ->\n    return x if isa x\n    throw new TypeError \"Î©nfa___1 validation error: expected a #{typename} got #{rpr x}\"\n\n\n#===========================================================================================================\ngnd = do ->\n  R =\n    # boolean:        isa:  ( x ) -> ( x is true ) or ( x is false )\n    #.......................................................................................................\n    function:\n      isa:  ( x ) -> ( Object::toString.call x ) is '[object Function]'\n    #.......................................................................................................\n    template:\n      isa:    ( x ) -> x instanceof Template\n    #.......................................................................................................\n    pod:\n      isa:    ( x ) -> x? and ( Object.getPrototypeOf x ) in pod_prototypes\n      create: ( Q... ) -> Object.assign new_pod(), Q...\n    #.......................................................................................................\n    nfa_cfg:\n      isa: ( x ) ->\n        return false unless gnd.pod.isa x\n        return false unless gnd.template.isa_optional x.template\n        return false unless gnd.function.isa_optional x.isa\n        return false unless gnd.function.isa_optional x.validate\n        # return false unless gnd.function.isa_optional x.type\n        return true\n      template:\n        template: null\n        isa:      null\n        validate: null\n        type:     null\n  #.........................................................................................................\n  for typename, type of R\n    type.name     = typename\n    # type.validate = ( x ) -> ...\n  #.........................................................................................................\n  return R\n### TAINT this is more or less `ClearType.Type::create()` ###\ndo => for typename, type of gnd then do ( typename, type ) ->\n  if type.template? then type.template = ( new Template type.template )\n  if type.isa?\n    unless type.isa_optional? then type.isa_optional  = ( x ) -> ( not x? ) or ( type.isa x )\n    unless type.validate?     then type.validate      = create_validator type.name, ( x ) -> type.isa x\n  return null\n\n\n#===========================================================================================================\nhide = ( object, name, value ) => Object.defineProperty object, name,\n    enumerable:   false\n    writable:     true\n    configurable: true\n    value:        value\n\n#===========================================================================================================\nnameit = ( name, f ) -> Object.defineProperty f, 'name', { value: name, }; f\n\n#===========================================================================================================\nget_instance_methods = ( instance ) ->\n  R             = {}\n  for key, { value: method, } of Object.getOwnPropertyDescriptors instance\n    continue if key is 'constructor'\n    continue unless gnd.function.isa method\n    R[ key ] = method\n  return R\n\n#===========================================================================================================\nbind_instance_methods = ( instance, keep_name = true ) ->\n  for key, method of get_instance_methods Object.getPrototypeOf instance\n    if keep_name\n      hide instance, key, nameit method.name, method.bind instance\n    else\n      hide instance, key, method.bind instance\n  return null\n\n\n#===========================================================================================================\npush_at = ( list, idx, x ) ->\n  unless idx < 0\n    throw new Error \"Î©nfa___7 expected negative number, got #{rpr idx}\"\n  list.splice ( Math.max list.length + idx, 0 ), 0, x\n  return list\n\n# #-----------------------------------------------------------------------------------------------------------\n# pop_at = ( list, idx, x ) ->\n#   unless idx < 0\n#     throw new Error \"Î©nfa___8 expected negative number, got #{rpr idx}\"\n#   unless list.length >= Math.abs idx\n#     throw new Error \"Î©nfa___9 list too short, got index #{idx} for length of #{list.length}\"\n#   return ( list.splice idx, 1 )[ 0 ]\n\n#-----------------------------------------------------------------------------------------------------------\nset_at = ( list, idx, x ) ->\n  unless idx < 0\n    throw new Error \"Î©nfa__10 expected negative number, got #{rpr idx}\"\n  list[ list.length + idx ] = x\n  return x\n\n\n#===========================================================================================================\ndebug   = console.debug\nhelp    = console.help\nwarn    = console.warn\nrpr     = ( x ) -> ( require 'loupe' ).inspect x\n\n#===========================================================================================================\nmodule.exports = {\n  Template\n  gnd\n  create_validator\n  hide\n  nameit\n  # get_instance_methods\n  bind_instance_methods\n  push_at\n  # pop_at\n  set_at\n  debug\n  help\n  warn\n  rpr }\n"
  ]
}